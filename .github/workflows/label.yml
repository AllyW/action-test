on: 
  workflow_dispatch:
  pull_request_target:
      types: [opened, labeled, unlabeled, synchronize]

permissions:
  pull-requests: write

jobs:
  checkout-test:
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'skip-cal-version') }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
           python-version: "3.10"
      - name: Checkout repo
        uses: actions/checkout@master
        with:
          fetch-depth: 0 # checkout all branches
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Show workdirectory after site cloned
        run: |
           pwd
           ls
      - name: Get Diff Files
        run: |
            echo github.event.pull_request.base.sha: ${{ github.event.pull_request.base.sha }}
            echo github.event.pull_request.base.ref: ${{ github.event.pull_request.base.ref }}
            echo github.event.pull_request.head.sha: ${{ github.event.pull_request.head.sha }}
            echo github.event.pull_request.head.ref: ${{ github.event.pull_request.head.ref }}
            echo github.event.pull_request.head.repo.full_name: ${{ github.event.pull_request.head.repo.full_name }}
            echo github.sha: ${{github.sha}}
            git --version
            git log --oneline | head -n 30
            echo git branch -a
            git branch -a
            git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} > changed_files
            cat changed_files
            echo "changed_mod_list=$(cat changed_files | grep py | awk -F".py" '{print $1}' | sort | uniq | xargs)" >> $GITHUB_ENV
            echo git checkout ${{ github.event.pull_request.base.ref }}
            git checkout ${{ github.event.pull_request.base.ref }}
            echo git checkout ${{ github.event.pull_request.head.ref }}
            git checkout ${{ github.event.pull_request.head.ref }}
            echo "message4=$(openssl rand -base64 12)" >> $GITHUB_ENV
            python config.py
      - name: Display Diff PY File Name
        run: |
            echo array length: ${changed_mod_list[@]}
            if [ "${changed_mod_list[@]}" -eq "0" ]]; then
                echo array empty
            fi
            if [ -z "$changed_mod_list" ]; then
              echo "no_changed_mod=true" >> $GITHUB_ENV
            else
              echo "no_changed_mod=false" >> $GITHUB_ENV
            fi
            for mod in "$changed_mod_list"
            do
              echo changed module: "${mod}"
            done
      - name: Comment on the pull request
        if: ${{ env.no_changed_mod == 'false' }}
        uses: mshick/add-pr-comment@v2
        with:
           repo-token: ${{ secrets.ALLY_BOT }}
           message-id: allybot4
           message: "${{ env.message4 }}"
